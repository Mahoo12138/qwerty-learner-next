/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicRouteImport } from './routes/_public/route'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedSidebarRouteImport } from './routes/_authenticated/_sidebar/route'
import { Route as PublicExploreIndexImport } from './routes/_public/explore/index'
import { Route as PublicAuthSignUpImport } from './routes/_public/auth/sign-up'
import { Route as PublicAuthSignInImport } from './routes/_public/auth/sign-in'
import { Route as AuthenticatedSidebarDictionaryImport } from './routes/_authenticated/_sidebar/dictionary'
import { Route as AuthenticatedSidebarSettingRouteImport } from './routes/_authenticated/_sidebar/setting/route'
import { Route as AuthenticatedSidebarSettingIndexImport } from './routes/_authenticated/_sidebar/setting/index'
import { Route as AuthenticatedSidebarSettingMemberImport } from './routes/_authenticated/_sidebar/setting/member'

// Create/Update Routes

const PublicRouteRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedSidebarRouteRoute = AuthenticatedSidebarRouteImport.update({
  id: '/_sidebar',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const PublicExploreIndexRoute = PublicExploreIndexImport.update({
  id: '/explore/',
  path: '/explore/',
  getParentRoute: () => PublicRouteRoute,
} as any)

const PublicAuthSignUpRoute = PublicAuthSignUpImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => PublicRouteRoute,
} as any)

const PublicAuthSignInRoute = PublicAuthSignInImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => PublicRouteRoute,
} as any)

const AuthenticatedSidebarDictionaryRoute =
  AuthenticatedSidebarDictionaryImport.update({
    id: '/dictionary',
    path: '/dictionary',
    getParentRoute: () => AuthenticatedSidebarRouteRoute,
  } as any)

const AuthenticatedSidebarSettingRouteRoute =
  AuthenticatedSidebarSettingRouteImport.update({
    id: '/setting',
    path: '/setting',
    getParentRoute: () => AuthenticatedSidebarRouteRoute,
  } as any)

const AuthenticatedSidebarSettingIndexRoute =
  AuthenticatedSidebarSettingIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSidebarSettingRouteRoute,
  } as any)

const AuthenticatedSidebarSettingMemberRoute =
  AuthenticatedSidebarSettingMemberImport.update({
    id: '/member',
    path: '/member',
    getParentRoute: () => AuthenticatedSidebarSettingRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_sidebar': {
      id: '/_authenticated/_sidebar'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedSidebarRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/_sidebar/setting': {
      id: '/_authenticated/_sidebar/setting'
      path: '/setting'
      fullPath: '/setting'
      preLoaderRoute: typeof AuthenticatedSidebarSettingRouteImport
      parentRoute: typeof AuthenticatedSidebarRouteImport
    }
    '/_authenticated/_sidebar/dictionary': {
      id: '/_authenticated/_sidebar/dictionary'
      path: '/dictionary'
      fullPath: '/dictionary'
      preLoaderRoute: typeof AuthenticatedSidebarDictionaryImport
      parentRoute: typeof AuthenticatedSidebarRouteImport
    }
    '/_public/auth/sign-in': {
      id: '/_public/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof PublicAuthSignInImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/auth/sign-up': {
      id: '/_public/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof PublicAuthSignUpImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/explore/': {
      id: '/_public/explore/'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof PublicExploreIndexImport
      parentRoute: typeof PublicRouteImport
    }
    '/_authenticated/_sidebar/setting/member': {
      id: '/_authenticated/_sidebar/setting/member'
      path: '/member'
      fullPath: '/setting/member'
      preLoaderRoute: typeof AuthenticatedSidebarSettingMemberImport
      parentRoute: typeof AuthenticatedSidebarSettingRouteImport
    }
    '/_authenticated/_sidebar/setting/': {
      id: '/_authenticated/_sidebar/setting/'
      path: '/'
      fullPath: '/setting/'
      preLoaderRoute: typeof AuthenticatedSidebarSettingIndexImport
      parentRoute: typeof AuthenticatedSidebarSettingRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSidebarSettingRouteRouteChildren {
  AuthenticatedSidebarSettingMemberRoute: typeof AuthenticatedSidebarSettingMemberRoute
  AuthenticatedSidebarSettingIndexRoute: typeof AuthenticatedSidebarSettingIndexRoute
}

const AuthenticatedSidebarSettingRouteRouteChildren: AuthenticatedSidebarSettingRouteRouteChildren =
  {
    AuthenticatedSidebarSettingMemberRoute:
      AuthenticatedSidebarSettingMemberRoute,
    AuthenticatedSidebarSettingIndexRoute:
      AuthenticatedSidebarSettingIndexRoute,
  }

const AuthenticatedSidebarSettingRouteRouteWithChildren =
  AuthenticatedSidebarSettingRouteRoute._addFileChildren(
    AuthenticatedSidebarSettingRouteRouteChildren,
  )

interface AuthenticatedSidebarRouteRouteChildren {
  AuthenticatedSidebarSettingRouteRoute: typeof AuthenticatedSidebarSettingRouteRouteWithChildren
  AuthenticatedSidebarDictionaryRoute: typeof AuthenticatedSidebarDictionaryRoute
}

const AuthenticatedSidebarRouteRouteChildren: AuthenticatedSidebarRouteRouteChildren =
  {
    AuthenticatedSidebarSettingRouteRoute:
      AuthenticatedSidebarSettingRouteRouteWithChildren,
    AuthenticatedSidebarDictionaryRoute: AuthenticatedSidebarDictionaryRoute,
  }

const AuthenticatedSidebarRouteRouteWithChildren =
  AuthenticatedSidebarRouteRoute._addFileChildren(
    AuthenticatedSidebarRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSidebarRouteRoute: typeof AuthenticatedSidebarRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSidebarRouteRoute: AuthenticatedSidebarRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface PublicRouteRouteChildren {
  PublicAuthSignInRoute: typeof PublicAuthSignInRoute
  PublicAuthSignUpRoute: typeof PublicAuthSignUpRoute
  PublicExploreIndexRoute: typeof PublicExploreIndexRoute
}

const PublicRouteRouteChildren: PublicRouteRouteChildren = {
  PublicAuthSignInRoute: PublicAuthSignInRoute,
  PublicAuthSignUpRoute: PublicAuthSignUpRoute,
  PublicExploreIndexRoute: PublicExploreIndexRoute,
}

const PublicRouteRouteWithChildren = PublicRouteRoute._addFileChildren(
  PublicRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedSidebarRouteRouteWithChildren
  '/': typeof AuthenticatedIndexRoute
  '/setting': typeof AuthenticatedSidebarSettingRouteRouteWithChildren
  '/dictionary': typeof AuthenticatedSidebarDictionaryRoute
  '/auth/sign-in': typeof PublicAuthSignInRoute
  '/auth/sign-up': typeof PublicAuthSignUpRoute
  '/explore': typeof PublicExploreIndexRoute
  '/setting/member': typeof AuthenticatedSidebarSettingMemberRoute
  '/setting/': typeof AuthenticatedSidebarSettingIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthenticatedSidebarRouteRouteWithChildren
  '/': typeof AuthenticatedIndexRoute
  '/dictionary': typeof AuthenticatedSidebarDictionaryRoute
  '/auth/sign-in': typeof PublicAuthSignInRoute
  '/auth/sign-up': typeof PublicAuthSignUpRoute
  '/explore': typeof PublicExploreIndexRoute
  '/setting/member': typeof AuthenticatedSidebarSettingMemberRoute
  '/setting': typeof AuthenticatedSidebarSettingIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_public': typeof PublicRouteRouteWithChildren
  '/_authenticated/_sidebar': typeof AuthenticatedSidebarRouteRouteWithChildren
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/_sidebar/setting': typeof AuthenticatedSidebarSettingRouteRouteWithChildren
  '/_authenticated/_sidebar/dictionary': typeof AuthenticatedSidebarDictionaryRoute
  '/_public/auth/sign-in': typeof PublicAuthSignInRoute
  '/_public/auth/sign-up': typeof PublicAuthSignUpRoute
  '/_public/explore/': typeof PublicExploreIndexRoute
  '/_authenticated/_sidebar/setting/member': typeof AuthenticatedSidebarSettingMemberRoute
  '/_authenticated/_sidebar/setting/': typeof AuthenticatedSidebarSettingIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/setting'
    | '/dictionary'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/explore'
    | '/setting/member'
    | '/setting/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/'
    | '/dictionary'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/explore'
    | '/setting/member'
    | '/setting'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_public'
    | '/_authenticated/_sidebar'
    | '/_authenticated/'
    | '/_authenticated/_sidebar/setting'
    | '/_authenticated/_sidebar/dictionary'
    | '/_public/auth/sign-in'
    | '/_public/auth/sign-up'
    | '/_public/explore/'
    | '/_authenticated/_sidebar/setting/member'
    | '/_authenticated/_sidebar/setting/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  PublicRouteRoute: typeof PublicRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  PublicRouteRoute: PublicRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_public"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/_sidebar",
        "/_authenticated/"
      ]
    },
    "/_public": {
      "filePath": "_public/route.tsx",
      "children": [
        "/_public/auth/sign-in",
        "/_public/auth/sign-up",
        "/_public/explore/"
      ]
    },
    "/_authenticated/_sidebar": {
      "filePath": "_authenticated/_sidebar/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/_sidebar/setting",
        "/_authenticated/_sidebar/dictionary"
      ]
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/_sidebar/setting": {
      "filePath": "_authenticated/_sidebar/setting/route.tsx",
      "parent": "/_authenticated/_sidebar",
      "children": [
        "/_authenticated/_sidebar/setting/member",
        "/_authenticated/_sidebar/setting/"
      ]
    },
    "/_authenticated/_sidebar/dictionary": {
      "filePath": "_authenticated/_sidebar/dictionary.tsx",
      "parent": "/_authenticated/_sidebar"
    },
    "/_public/auth/sign-in": {
      "filePath": "_public/auth/sign-in.tsx",
      "parent": "/_public"
    },
    "/_public/auth/sign-up": {
      "filePath": "_public/auth/sign-up.tsx",
      "parent": "/_public"
    },
    "/_public/explore/": {
      "filePath": "_public/explore/index.tsx",
      "parent": "/_public"
    },
    "/_authenticated/_sidebar/setting/member": {
      "filePath": "_authenticated/_sidebar/setting/member.tsx",
      "parent": "/_authenticated/_sidebar/setting"
    },
    "/_authenticated/_sidebar/setting/": {
      "filePath": "_authenticated/_sidebar/setting/index.tsx",
      "parent": "/_authenticated/_sidebar/setting"
    }
  }
}
ROUTE_MANIFEST_END */
