/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PublicRouteRouteImport } from './routes/_public/route'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as AuthenticatedSidebarRouteRouteImport } from './routes/_authenticated/_sidebar/route'
import { Route as PublicExploreIndexRouteImport } from './routes/_public/explore/index'
import { Route as PublicAuthSignUpRouteImport } from './routes/_public/auth/sign-up'
import { Route as PublicAuthSignInRouteImport } from './routes/_public/auth/sign-in'
import { Route as AuthenticatedSidebarStatisticRouteImport } from './routes/_authenticated/_sidebar/statistic'
import { Route as AuthenticatedSidebarProfileRouteImport } from './routes/_authenticated/_sidebar/profile'
import { Route as AuthenticatedSidebarMistakeRouteImport } from './routes/_authenticated/_sidebar/mistake'
import { Route as AuthenticatedSidebarDictionaryRouteImport } from './routes/_authenticated/_sidebar/dictionary'
import { Route as AuthenticatedSidebarSettingRouteRouteImport } from './routes/_authenticated/_sidebar/setting/route'
import { Route as AuthenticatedSidebarSettingIndexRouteImport } from './routes/_authenticated/_sidebar/setting/index'
import { Route as AuthenticatedSidebarSettingMemberRouteImport } from './routes/_authenticated/_sidebar/setting/member'

const PublicRouteRoute = PublicRouteRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedSidebarRouteRoute =
  AuthenticatedSidebarRouteRouteImport.update({
    id: '/_sidebar',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const PublicExploreIndexRoute = PublicExploreIndexRouteImport.update({
  id: '/explore/',
  path: '/explore/',
  getParentRoute: () => PublicRouteRoute,
} as any)
const PublicAuthSignUpRoute = PublicAuthSignUpRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => PublicRouteRoute,
} as any)
const PublicAuthSignInRoute = PublicAuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => PublicRouteRoute,
} as any)
const AuthenticatedSidebarStatisticRoute =
  AuthenticatedSidebarStatisticRouteImport.update({
    id: '/statistic',
    path: '/statistic',
    getParentRoute: () => AuthenticatedSidebarRouteRoute,
  } as any)
const AuthenticatedSidebarProfileRoute =
  AuthenticatedSidebarProfileRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => AuthenticatedSidebarRouteRoute,
  } as any)
const AuthenticatedSidebarMistakeRoute =
  AuthenticatedSidebarMistakeRouteImport.update({
    id: '/mistake',
    path: '/mistake',
    getParentRoute: () => AuthenticatedSidebarRouteRoute,
  } as any)
const AuthenticatedSidebarDictionaryRoute =
  AuthenticatedSidebarDictionaryRouteImport.update({
    id: '/dictionary',
    path: '/dictionary',
    getParentRoute: () => AuthenticatedSidebarRouteRoute,
  } as any)
const AuthenticatedSidebarSettingRouteRoute =
  AuthenticatedSidebarSettingRouteRouteImport.update({
    id: '/setting',
    path: '/setting',
    getParentRoute: () => AuthenticatedSidebarRouteRoute,
  } as any)
const AuthenticatedSidebarSettingIndexRoute =
  AuthenticatedSidebarSettingIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSidebarSettingRouteRoute,
  } as any)
const AuthenticatedSidebarSettingMemberRoute =
  AuthenticatedSidebarSettingMemberRouteImport.update({
    id: '/member',
    path: '/member',
    getParentRoute: () => AuthenticatedSidebarSettingRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof AuthenticatedIndexRoute
  '/setting': typeof AuthenticatedSidebarSettingRouteRouteWithChildren
  '/dictionary': typeof AuthenticatedSidebarDictionaryRoute
  '/mistake': typeof AuthenticatedSidebarMistakeRoute
  '/profile': typeof AuthenticatedSidebarProfileRoute
  '/statistic': typeof AuthenticatedSidebarStatisticRoute
  '/auth/sign-in': typeof PublicAuthSignInRoute
  '/auth/sign-up': typeof PublicAuthSignUpRoute
  '/explore': typeof PublicExploreIndexRoute
  '/setting/member': typeof AuthenticatedSidebarSettingMemberRoute
  '/setting/': typeof AuthenticatedSidebarSettingIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof AuthenticatedIndexRoute
  '/dictionary': typeof AuthenticatedSidebarDictionaryRoute
  '/mistake': typeof AuthenticatedSidebarMistakeRoute
  '/profile': typeof AuthenticatedSidebarProfileRoute
  '/statistic': typeof AuthenticatedSidebarStatisticRoute
  '/auth/sign-in': typeof PublicAuthSignInRoute
  '/auth/sign-up': typeof PublicAuthSignUpRoute
  '/explore': typeof PublicExploreIndexRoute
  '/setting/member': typeof AuthenticatedSidebarSettingMemberRoute
  '/setting': typeof AuthenticatedSidebarSettingIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_public': typeof PublicRouteRouteWithChildren
  '/_authenticated/_sidebar': typeof AuthenticatedSidebarRouteRouteWithChildren
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/_sidebar/setting': typeof AuthenticatedSidebarSettingRouteRouteWithChildren
  '/_authenticated/_sidebar/dictionary': typeof AuthenticatedSidebarDictionaryRoute
  '/_authenticated/_sidebar/mistake': typeof AuthenticatedSidebarMistakeRoute
  '/_authenticated/_sidebar/profile': typeof AuthenticatedSidebarProfileRoute
  '/_authenticated/_sidebar/statistic': typeof AuthenticatedSidebarStatisticRoute
  '/_public/auth/sign-in': typeof PublicAuthSignInRoute
  '/_public/auth/sign-up': typeof PublicAuthSignUpRoute
  '/_public/explore/': typeof PublicExploreIndexRoute
  '/_authenticated/_sidebar/setting/member': typeof AuthenticatedSidebarSettingMemberRoute
  '/_authenticated/_sidebar/setting/': typeof AuthenticatedSidebarSettingIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/setting'
    | '/dictionary'
    | '/mistake'
    | '/profile'
    | '/statistic'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/explore'
    | '/setting/member'
    | '/setting/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dictionary'
    | '/mistake'
    | '/profile'
    | '/statistic'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/explore'
    | '/setting/member'
    | '/setting'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_public'
    | '/_authenticated/_sidebar'
    | '/_authenticated/'
    | '/_authenticated/_sidebar/setting'
    | '/_authenticated/_sidebar/dictionary'
    | '/_authenticated/_sidebar/mistake'
    | '/_authenticated/_sidebar/profile'
    | '/_authenticated/_sidebar/statistic'
    | '/_public/auth/sign-in'
    | '/_public/auth/sign-up'
    | '/_public/explore/'
    | '/_authenticated/_sidebar/setting/member'
    | '/_authenticated/_sidebar/setting/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  PublicRouteRoute: typeof PublicRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/_sidebar': {
      id: '/_authenticated/_sidebar'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedSidebarRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_public/explore/': {
      id: '/_public/explore/'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof PublicExploreIndexRouteImport
      parentRoute: typeof PublicRouteRoute
    }
    '/_public/auth/sign-up': {
      id: '/_public/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof PublicAuthSignUpRouteImport
      parentRoute: typeof PublicRouteRoute
    }
    '/_public/auth/sign-in': {
      id: '/_public/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof PublicAuthSignInRouteImport
      parentRoute: typeof PublicRouteRoute
    }
    '/_authenticated/_sidebar/statistic': {
      id: '/_authenticated/_sidebar/statistic'
      path: '/statistic'
      fullPath: '/statistic'
      preLoaderRoute: typeof AuthenticatedSidebarStatisticRouteImport
      parentRoute: typeof AuthenticatedSidebarRouteRoute
    }
    '/_authenticated/_sidebar/profile': {
      id: '/_authenticated/_sidebar/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedSidebarProfileRouteImport
      parentRoute: typeof AuthenticatedSidebarRouteRoute
    }
    '/_authenticated/_sidebar/mistake': {
      id: '/_authenticated/_sidebar/mistake'
      path: '/mistake'
      fullPath: '/mistake'
      preLoaderRoute: typeof AuthenticatedSidebarMistakeRouteImport
      parentRoute: typeof AuthenticatedSidebarRouteRoute
    }
    '/_authenticated/_sidebar/dictionary': {
      id: '/_authenticated/_sidebar/dictionary'
      path: '/dictionary'
      fullPath: '/dictionary'
      preLoaderRoute: typeof AuthenticatedSidebarDictionaryRouteImport
      parentRoute: typeof AuthenticatedSidebarRouteRoute
    }
    '/_authenticated/_sidebar/setting': {
      id: '/_authenticated/_sidebar/setting'
      path: '/setting'
      fullPath: '/setting'
      preLoaderRoute: typeof AuthenticatedSidebarSettingRouteRouteImport
      parentRoute: typeof AuthenticatedSidebarRouteRoute
    }
    '/_authenticated/_sidebar/setting/': {
      id: '/_authenticated/_sidebar/setting/'
      path: '/'
      fullPath: '/setting/'
      preLoaderRoute: typeof AuthenticatedSidebarSettingIndexRouteImport
      parentRoute: typeof AuthenticatedSidebarSettingRouteRoute
    }
    '/_authenticated/_sidebar/setting/member': {
      id: '/_authenticated/_sidebar/setting/member'
      path: '/member'
      fullPath: '/setting/member'
      preLoaderRoute: typeof AuthenticatedSidebarSettingMemberRouteImport
      parentRoute: typeof AuthenticatedSidebarSettingRouteRoute
    }
  }
}

interface AuthenticatedSidebarSettingRouteRouteChildren {
  AuthenticatedSidebarSettingMemberRoute: typeof AuthenticatedSidebarSettingMemberRoute
  AuthenticatedSidebarSettingIndexRoute: typeof AuthenticatedSidebarSettingIndexRoute
}

const AuthenticatedSidebarSettingRouteRouteChildren: AuthenticatedSidebarSettingRouteRouteChildren =
  {
    AuthenticatedSidebarSettingMemberRoute:
      AuthenticatedSidebarSettingMemberRoute,
    AuthenticatedSidebarSettingIndexRoute:
      AuthenticatedSidebarSettingIndexRoute,
  }

const AuthenticatedSidebarSettingRouteRouteWithChildren =
  AuthenticatedSidebarSettingRouteRoute._addFileChildren(
    AuthenticatedSidebarSettingRouteRouteChildren,
  )

interface AuthenticatedSidebarRouteRouteChildren {
  AuthenticatedSidebarSettingRouteRoute: typeof AuthenticatedSidebarSettingRouteRouteWithChildren
  AuthenticatedSidebarDictionaryRoute: typeof AuthenticatedSidebarDictionaryRoute
  AuthenticatedSidebarMistakeRoute: typeof AuthenticatedSidebarMistakeRoute
  AuthenticatedSidebarProfileRoute: typeof AuthenticatedSidebarProfileRoute
  AuthenticatedSidebarStatisticRoute: typeof AuthenticatedSidebarStatisticRoute
}

const AuthenticatedSidebarRouteRouteChildren: AuthenticatedSidebarRouteRouteChildren =
  {
    AuthenticatedSidebarSettingRouteRoute:
      AuthenticatedSidebarSettingRouteRouteWithChildren,
    AuthenticatedSidebarDictionaryRoute: AuthenticatedSidebarDictionaryRoute,
    AuthenticatedSidebarMistakeRoute: AuthenticatedSidebarMistakeRoute,
    AuthenticatedSidebarProfileRoute: AuthenticatedSidebarProfileRoute,
    AuthenticatedSidebarStatisticRoute: AuthenticatedSidebarStatisticRoute,
  }

const AuthenticatedSidebarRouteRouteWithChildren =
  AuthenticatedSidebarRouteRoute._addFileChildren(
    AuthenticatedSidebarRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSidebarRouteRoute: typeof AuthenticatedSidebarRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSidebarRouteRoute: AuthenticatedSidebarRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface PublicRouteRouteChildren {
  PublicAuthSignInRoute: typeof PublicAuthSignInRoute
  PublicAuthSignUpRoute: typeof PublicAuthSignUpRoute
  PublicExploreIndexRoute: typeof PublicExploreIndexRoute
}

const PublicRouteRouteChildren: PublicRouteRouteChildren = {
  PublicAuthSignInRoute: PublicAuthSignInRoute,
  PublicAuthSignUpRoute: PublicAuthSignUpRoute,
  PublicExploreIndexRoute: PublicExploreIndexRoute,
}

const PublicRouteRouteWithChildren = PublicRouteRoute._addFileChildren(
  PublicRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  PublicRouteRoute: PublicRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
